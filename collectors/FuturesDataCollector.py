import os
import pandas as pd
import datetime as dt
import pytz
from tqdm import tqdm
from concurrent.futures import ThreadPoolExecutor, as_completed
from pybit.unified_trading import HTTP

class FuturesDataCollector:
    """
    –ö–ª–∞—Å—Å –¥–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ —Å–±–æ—Ä–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö —Ñ—å—é—á–µ—Ä—Å–æ–≤ USDT —Å Bybit.
    """

    def __init__(self, api_key, api_secret,
                 save_dir="/Users/papaskakun/PycharmProjects/PythonProject/futures_data",
                 testnet=False, interval='60', limit=3600):
        self.api_key = api_key
        self.api_secret = api_secret
        self.save_dir = save_dir
        self.testnet = testnet
        self.interval = interval
        self.limit = limit
        self.session = HTTP(api_key=self.api_key, api_secret=self.api_secret, testnet=self.testnet)
        self.tickers = []

        os.makedirs(self.save_dir, exist_ok=True)
        print(f"üìÅ –ü–∞–ø–∫–∞ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞: {self.save_dir}")

    def get_usdt_futures_tickers(self):
        """
        –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ç–∏–∫–µ—Ä–æ–≤ —Ñ—å—é—á–µ—Ä—Å–æ–≤, —Ç–æ—Ä–≥—É–µ–º—ã—Ö –∫ USDT.
        """
        result = self.session.get_tickers(category="linear").get('result', {}).get('list', [])
        self.tickers = [asset['symbol'] for asset in result if asset['symbol'].endswith('USDT')]
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(self.tickers)} —Ç–∏–∫–µ—Ä–æ–≤: {self.tickers}")
        return self.tickers

    def format_data(self, response):
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å–≤–µ—á–µ–π –≤ DataFrame —Å —á–∞—Å–æ–≤—ã–º –ø–æ—è—Å–æ–º –ú–æ—Å–∫–≤—ã.
        """
        data = response.get('list', [])
        if not data:
            return None

        df = pd.DataFrame(data, columns=['timestamp', 'open', 'high', 'low', 'close', 'volume', 'turnover'])
        moscow_tz = pytz.timezone('Europe/Moscow')
        df.index = df['timestamp'].apply(
            lambda x: dt.datetime.fromtimestamp(int(x) / 1000, moscow_tz).strftime('%Y-%m-%d %H:%M:%S')
        )
        return df[::-1].apply(pd.to_numeric)

    def collect_data_for_symbol(self, symbol):
        """
        –°–∫–∞—á–∏–≤–∞–µ—Ç –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É —Ç–∏–∫–µ—Ä—É.
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–º—è —Ñ–∞–π–ª–∞ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.
        """
        try:
            response = self.session.get_kline(
                category='linear',
                symbol=symbol,
                interval=self.interval,
                limit=self.limit
            ).get('result')

            latest = self.format_data(response)
            if isinstance(latest, pd.DataFrame):
                file_path = os.path.join(self.save_dir, f"{symbol}_h1.csv")
                latest.to_csv(file_path)
                return f"üíæ {symbol} ‚Äî —Å–æ—Ö—Ä–∞–Ω—ë–Ω"
            else:
                return f"‚ö†Ô∏è {symbol} ‚Äî –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
        except Exception as e:
            return f"‚ùå {symbol} ‚Äî –æ—à–∏–±–∫–∞: {e}"

    def collect_all_data(self, max_workers=8):
        """
        –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ —Å–æ–±–∏—Ä–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –≤—Å–µ–º —Ç–∏–∫–µ—Ä–∞–º.
        """
        if not self.tickers:
            self.get_usdt_futures_tickers()

        print("üìä –ù–∞—á–∏–Ω–∞–µ–º –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö...")

        results = []
        with ThreadPoolExecutor(max_workers=max_workers) as executor:
            futures = {executor.submit(self.collect_data_for_symbol, symbol): symbol for symbol in self.tickers}
            for future in tqdm(as_completed(futures), total=len(futures), desc="–°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö"):
                result = future.result()
                results.append(result)

        # –í—ã–≤–æ–¥–∏–º —Ç–æ–ª—å–∫–æ –æ—à–∏–±–∫–∏ –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        print("\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
        for r in results:
            if not r.startswith("üíæ"):
                print(r)

        print("üéØ –°–±–æ—Ä –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω!")
